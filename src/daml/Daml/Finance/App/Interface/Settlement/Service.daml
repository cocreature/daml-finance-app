-- Copyright (c) 2022 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

module Daml.Finance.App.Interface.Settlement.Service where

import Daml.Finance.App.Interface.Base.Service qualified as Base (I, Implementation)
import Daml.Finance.Interface.Settlement.Instruction qualified as Instruction (I)
import Daml.Finance.Interface.Settlement.Types (Allocation, Approval)

type I = Service

type V = View

data View = View {}
  deriving (Eq, Show)

interface Service where
  viewtype V

  asBase : Base.I
    -- ^ Conversion to base `Service` interface.

  allocateInstruction : AllocateInstruction -> Update (ContractId Instruction.I)
    -- ^ Implementation of the `AllocationInstruction` choice.

  approveInstruction : ApproveInstruction -> Update (ContractId Instruction.I)
    -- ^ Implementation of the `ApproveInstruction` choice.

  nonconsuming choice AllocateInstruction : ContractId Instruction.I
    with
      actor : Party
      instructionCid : ContractId Instruction.I
      allocation : Allocation
    controller actor
    do
      allocateInstruction this arg

  nonconsuming choice ApproveInstruction : ContractId Instruction.I
    with
      actor : Party
      instructionCid : ContractId Instruction.I
      approval : Approval
    controller actor
    do
      approveInstruction this arg

-- | Type constraint for requiring templates to implement `Service`.
type Implementation t = (HasToInterface t Service, Base.Implementation t)
class (Implementation t) => HasImplementation t
instance HasImplementation Service
instance HasToInterface Service Base.I where _toInterface = asBase
