-- Copyright (c) 2022 Digital Asset (Switzerland) GmbH and/or its affiliates. All rights reserved.
-- SPDX-License-Identifier: Apache-2.0

module Daml.Finance.App.Interface.Trading.CreateOrderRequest where

import Daml.Finance.App.Interface.Common.Removable qualified as Removable (I, Implementation)
import Daml.Finance.App.Interface.Trading.Order qualified as Order (I, Side)
import Daml.Finance.Interface.Account.Account qualified as Account (K)
import Daml.Finance.Interface.Holding.Fungible qualified as Fungible (I)
import Daml.Finance.Interface.Instrument.Base.Instrument qualified as Instrument (Q)
import Daml.Finance.Interface.Types.Common (Id, Parties)

type I = CreateOrderRequest

type V = View

data View = View
  with
    operator : Party
    provider : Party
    customer : Party
    id : Id
    timestamp : Time
    listingId : Id
    quantity : Instrument.Q
    side : Order.Side
    price : Instrument.Q
    collateralCid : ContractId Fungible.I
    account : Account.K
    orderCids : [ContractId Order.I]
    observers : Parties
  deriving (Eq, Show)

interface CreateOrderRequest where
  viewtype View
    -- ^ Interface view type.

  asRemovable : Removable.I
    -- ^ Conversion to the `Removable` interface.

-- | Type constraint for requiring templates to implement `CreateOrderRequest`.
type Implementation t = (HasToInterface t CreateOrderRequest, Removable.Implementation t)
class (Implementation t) => HasImplementation t
instance HasImplementation CreateOrderRequest
instance HasToInterface CreateOrderRequest Removable.I where _toInterface = asRemovable
